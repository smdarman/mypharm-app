{"version":3,"sources":["components/Header.js","App.js"],"names":["styles","StyleSheet","create","header","fontSize","backgroundColor","Header","View","style","Text","App","useState","simple","setsimple","drugSelector","setdrugSelector","drugStrength","setdrugStrenght","weight","setWeight","nameofdrug","doseofdrug","container","input","TextInput","height","width","borderColor","borderWidth","placeholder","onChangeText","val","console","log","clearButtonMode","value","Button","title","color","onPress","content","selectedValue","onValueChange","itemValue","itemIndex","Item","label","parseInt","test","StatusBar","justifyContent","padding","flex","alignItems","marginBottom","marginTop"],"mappings":"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","file":"static/js/app.94f67674.chunk.js","sourcesContent":["import React from 'react'\nimport { Text, StyleSheet, View } from 'react-native';\n\nconst Header = () => {\n    return (\n        <View style={styles.header}>\n            <Text style={{fontSize: 34}}>Dose App</Text> \n        </View>\n       \n    );\n}\n\nconst styles = StyleSheet.create({\n    header: {\n        fontSize: 34,\n        backgroundColor: 'tomato',\n        \n    }\n})\nexport default Header;","import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport {Picker} from '@react-native-picker/picker';\nimport { StyleSheet,Text, View, Button, TextInput } from 'react-native';\nimport Header from './components/Header'\nexport default function App() {\n\n  const [simple, setsimple] = useState(null)\n  const [drugSelector, setdrugSelector] = useState(null);\n  const [drugStrength, setdrugStrenght] = useState(null);\n  const [weight, setWeight] = useState(null)\n\n  let nameofdrug = [\"Keflex\", \"Amoxil\", \"Klacid\"]\n  let doseofdrug = [\"50\", \"25\", \"40\"]\n  // var doses = {\n  //   \"Keflex\": 20,\n  //   \"Amoxil\": 25,\n  //   \"Klacid\": 10\n  // };\n\n  function calc () {\n    \n      \n      if (drugSelector == nameofdrug[0]) {\n        if (drugStrength == doseofdrug[0]) {\n             setsimple ( ()=> (parseInt(weight) * 25)/50)\n        }else if  (drugStrength == doseofdrug[1]) {\n            setsimple ( ()=> (parseInt(weight) * 25)/25)\n        }else if  (drugStrength == doseofdrug[2]) {\n            //errror message\n            setsimple ( ()=>(parseInt(weight) * 25)/10)\n        }\n            \n      \n       \n    }\n    if (drugSelector == nameofdrug[1]) {\n      if (drugStrength == doseofdrug[0]) {\n           setsimple ( ()=> (parseInt(weight) * 20)/50)\n      }else if  (drugStrength == doseofdrug[1]) {\n          setsimple ( ()=> (parseInt(weight) * 20)/25)\n      }else if  (drugStrength == doseofdrug[2]) {\n          //errror message\n          setsimple ( ()=>(parseInt(weight) * 20)/10)\n      }\n          \n    \n     \n  }\n  if (drugSelector == nameofdrug[2]) {\n    if (drugStrength == doseofdrug[0]) {\n         setsimple ( ()=> (parseInt(weight) * 10)/50)\n    }else if  (drugStrength == doseofdrug[1]) {\n        setsimple ( ()=> (parseInt(weight) * 10)/25)\n    }else if  (drugStrength == doseofdrug[2]) {\n        //errror message\n        setsimple ( ()=>(parseInt(weight) * 10)/10)\n    }\n        \n  \n   \n}\n    \n  }\n        \n   \n\n \n\n  \n\n\n  const changeHandler = (val) => {\n  \n    setWeight(val);  \n    console.log(val);\n    \n  }\n  const submitHandler = (weight) => {\n    console.log(\"handler pressed\");\n    \n  };\n\n  return (\n    <View style={styles.container}>\n      <Header/>\n      <View style={styles.input}>\n      <TextInput \n       style={{ height: 40, width: 240 , borderColor: 'gray', borderWidth: 2 }}\n      placeholder=\"Patient weight...\"\n      onChangeText={changeHandler}\n      clearButtonMode=\"always\" \n      value={weight}\n    \n      />\n      <Button\n      title='Clear'\n      color='black'\n      onPress={() => {submitHandler(weight); setWeight(\"\")}}\n    \n      />\n    </View>\n     \n      <Text style={styles.content} >Strenght:{drugStrength}</Text>\n      <Text style={styles.content} >Drug name:{drugSelector}</Text>\n\n      \n      \n      <Text style={styles.content} >Weight:{weight}</Text>\n      <Picker\n        selectedValue={drugSelector}\n        style={{ height: 50, width: 150 }}\n        onValueChange={(itemValue, itemIndex) => setdrugSelector(itemValue)}\n        \n      >\n        <Picker.Item label=\"Keflex\" value={nameofdrug[0]} />\n        <Picker.Item label=\"Amoxil\" value={nameofdrug[1]} />\n        <Picker.Item label=\"Klacid\" value={nameofdrug[2]} />\n      </Picker>\n      <Picker\n        selectedValue={drugStrength}\n        style={{ height: 50, width: 150 }}\n        onValueChange={(itemValue, itemIndex) => setdrugStrenght(itemValue)}\n        \n      >\n        <Picker.Item label=\"50\" value={doseofdrug[0]} />\n        <Picker.Item label=\"25\" value={doseofdrug[1]} />\n        <Picker.Item label=\"40\" value={doseofdrug[2]} />\n      </Picker>\n      <Button title=\"Calculate\" onPress={calc}> </Button>\n      <Text style={styles.test} >Dose for day: {simple}ml</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent:'space-between',\n    padding:'5',\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    marginBottom: 20,\n    marginTop: 20\n    \n  },\n  content: {\n    backgroundColor: \"white\",\n    fontSize: 24,\n    \n  },\n  test: {\n    backgroundColor: \"pink\",\n    fontSize: 24,\n    \n  }\n});\n"],"sourceRoot":""}